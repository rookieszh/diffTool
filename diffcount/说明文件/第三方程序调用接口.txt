注意：该方法仅供其他程序调用diffcount使用，仅供供开发者参考

方式一：静态链接库

  进行make操作后，可以获得libdiffcount.h 以及 libdiffcount.a
  你可以通过静态链接的方法把它链接到你的程序中
  diffcount.exe 本身就是先生成静态库，然后通过命令行接口链接生成的。


方式二：通过命令行管道

   也可通过命令行方式调用通过标准输出可以获得格式化的、可供程序解析的统计结果。
   通过控制台/管道读取并进行解析即可。推荐采用这个方法。
   


调用参数： --for-program-reading

1、在差异统计两个代码包的情况下：
diffcount --for-program-reading test\sp1 test\sp2
C       31      39      7       38      6       15      20      1.0
Pascal  0       25      0       0       0       0       0       0.23
Java    7       11      3       10      0       3       8       0.41
Config  31      0       4       35      1       0       34      0.12
XML     825     0       0       825     14      0       811     0.12

输出的含义为（从左到右）

语言类型  新增代码行  修改代码行 删除代码行    总变动代码行（新增+修改）  
(总变动行中)空白行  （总变动行中）注释行   （变动行中）非空非注释行   标准C的折算比例



2、在统计一个代码包的情况下，输出如下：

diffcount -c --for-program-reading test
C       8747    1858    1576    6004    1.0
C++     1589    183     124     1309    0.42
Pascal  349     59      60      243     0.23
Java    1038    98      326     642     0.41
ASM     418     86      15      322     2.5

输出的含义（从左到右）：

语言类型    总代码行    空白行    注释行    非空非注释行  标准C折算比例


3.统计中间详细清单

  如果你的程序同时需要读取最终结果和中间结果，请使用--print-files-info   
  在中间详细清单和最后的汇总结果之间，使用了7个$符号($$$$$$$)做为分割符

  差异统计的时候，详单列从左到右的信息为：
  
  { 语言类型  新增代码行  修改代码行 删除代码行    总变动代码行（新增+修改）  
    (总变动行中)空白行  （总变动行中）注释行   （变动行中）非空非注释行   
    文件差异状态（新增/修改/删除）  基线文件名   目标文件名 }
  
  
  只统计一个代码包是，详单列从左到右的信息为：
  
  { 语言类型    总代码行    空白行    注释行    非空非注释行  目标文件名}

  
  