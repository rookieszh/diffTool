
diffcount 对编程语言类型的支持情况

在diffcount中，对语言的支持是内建的，每种语言有如下信息

{ 语言类型； 行注释符号； 块注释开始符号； 块注释结束符号；可选块注释开始符号；
  可选块注释结束符号； 字符串标识符； 扩展名列表；和标准C语言的折算比率 }

目前diffcount支持如下语言，如果能提供上边的信息，
可以对diffcount支持的语言进行扩展(在core/lang.h中)。 
                                                                                      
						
限制：
1、对于python暂不支持"""的块注释(实际上对于Python，经常做为块字符串，并不能完全视为注释)							
2、XML与配置文件也改为不考虑注释（配置文件是有注释的，但是不同的产品约定不同）
3、部分开发板使用uc做汇编语言的扩展名，增加uc的支持
4、增加FPL ASL 等为芯片专用语言/脚本					


+----------+------+------+--------+------+------+------+--------------------+------+
| 语言类型 |行注释|块开始| 块结束 |可选块|可选块|字符串|      扩展名        | 折算 |
+----------+------+------+--------+------+------+------+--------------------+------+
|   C      |  //  |  /*  |   */   |      |      |  "   | c;h;cc;            |  1   |
+----------+------+------+--------+------+------+------+--------------------+------+
|   C++    |  //  |  /*  |   */   |      |      |  "   | cpp;hpp;           | 0.42 |
+----------+------+------+--------+------+------+------+--------------------+------+
|  Pascal  |  //  |  (*  |   *)   |  {   |   }  |  '   | pas;pp;            | 0.23 |
+----------+------+------+--------+------+------+------+--------------------+------+
|  Java    |  //  |  /*  |   */   |      |      |  "   | jav;java;js;sqlj   | 0.41 |
+----------+------+------+--------+------+------+------+--------------------+------+
|  SQL     |  --  |  /*  |   */   |      |      |  '   | sql;tql;           | 0.1  |
+----------+------+------+--------+------+------+------+--------------------+------+
|  ASM     |  ;   |  /*  |   */   |      |      |      | asm;s;uc           | 2.5  |
+----------+------+------+--------+------+------+------+--------------------+------+
|  C#      |  //  |  /*  |   */   |      |      |  "   | cs;                | 0.2  |
+----------+------+------+--------+------+------+------+--------------------+------+
|  Basic   |  '   |      |        |      |      |  "   | bas;vbs;           | 0.21 |
+----------+------+------+--------+------+------+------+--------------------+------+
|  Perl    |  #   |      |        |      |      |  "   | pl;plx;pm;         | 0.16 |
+----------+------+------+--------+------+------+------+--------------------+------+
|  Python  |  #   |      |        |      |      |  "   | py;pyw             | 0.5  |
+----------+------+------+--------+------+------+------+--------------------+------+
|  TCL/TK  |  #   |      |        |      |      |  "   | tcl;tk;            | 0.5  |
+----------+------+------+--------+------+------+------+--------------------+------+
|  Config  |      |      |        |      |      |      | ini;conf;config;cfg| 0.12 |
+----------+------+------+--------+------+------+------+--------------------+------+   
|  XML     |      |      |        |      |      |      | xml;xul;           | 0.12 |
+----------+------+------+--------+------+------+------+--------------------+------+
|  FPL     |  //  | /*   |   */   |      |      |      | fpl;               | 2.5  |
+----------+------+------+--------+------+------+------+--------------------+------+
|  ASL     |  //  | /*   |   */   |      |      |      | asl;               |  1   |
+----------+------+------+--------+------+------+------+--------------------+------+
| Verilog  |  //  | /*   |   */   |      |      |      | v;                 | 2.5  |
+----------+------+------+--------+------+------+------+--------------------+------+

另外，考虑目前实际产品中编程语言的使用情况：

Basic : 比例使用 Visual Basic 6
Pascal: 比例使用 Object Pascal (Delphi使用）
Python: SPR表中暂无，目前暂用和TCL/TK一样的折算比例
Config: SPR表中暂无，目前使用和XML一样的折算比例

                                                         
备注：关于折算比例，目前还没有非常权威的来源
      这里参照SPR的Programming Language Table 中的Level进行
      Level高的语言，折算为标准C的数量会低（相同的投入，LEVEL高的语言应该生产出更多的代码）

